{"pageProps":{"frontmatter":{"title":"Listing Chats"},"headings":[{"depth":2,"value":"1. How to connect to chatlist socket."},{"depth":2,"value":"2. How to fetch chatlist"},{"depth":2,"value":"3. ChatList socket handlers"},{"depth":3,"value":"1). onChatListConnect"},{"depth":3,"value":"2). onChatListFetch"},{"depth":3,"value":"3). onChatListUpdate"},{"depth":2,"value":"Need help?"}],"body":{"compiledSource":"var d=Object.defineProperty,l=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var n=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var h=(t,e,a)=>e in t?d(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,o=(t,e)=>{for(var a in e||(e={}))n.call(e,a)&&h(t,a,e[a]);if(r)for(var a of r(e))c.call(e,a)&&h(t,a,e[a]);return t},p=(t,e)=>l(t,u(e));var i=(t,e)=>{var a={};for(var s in t)n.call(t,s)&&e.indexOf(s)<0&&(a[s]=t[s]);if(t!=null&&r)for(var s of r(t))e.indexOf(s)<0&&c.call(t,s)&&(a[s]=t[s]);return a};const makeShortcode=t=>function(a){return console.warn(\"Component \"+t+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",o({},a))},NextBlock=makeShortcode(\"NextBlock\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var s=a,{components:t}=s,e=i(s,[\"components\"]);return mdx(MDXLayout,p(o(o({},layoutProps),e),{components:t,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"1. How to connect to chatlist socket.\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-typescript\"}),`\nReact.useEffect(() => {\n  const chattylist = new ChattyList({\n    onChatListConnect: onChatListConnect,\n    onChatListFetch: onChatListFetch,\n    onChatListUpdate: onChatListUpdate\n  });\n\n  chattylist.connect();\n  return () => {\n    chattylist.disconnect();\n  }\n}, []);\n\n`)),mdx(\"h2\",null,\"2. How to fetch chatlist\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-typescript\"}),`\nReact.useEffect(() => {\n  if (chatty && connected) {\n    pullToRefresh && chatty.fetchChatList({ refresh: true, group: props.group });\n  }\n}, [pullToRefresh, connected, chatty]);\n\n\n`)),mdx(\"h2\",null,\"3. ChatList socket handlers\"),mdx(\"h3\",null,\"1). onChatListConnect\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-typescript\"}),`const onChatListConnect = (data: ChattyTypes.ChatListConnectResponseType) => {\n  if (data.error) {\n    console.warn('onChatListConnect error', data.error.message);\n    return;\n  }\n\n  setConnected(true);\n}\n`)),mdx(\"h3\",null,\"2). onChatListFetch\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-typescript\"}),`const onChatListFetch = (data: ChattyTypes.ChatListFetchResponseType) => {\n  if (data.error) {\n    console.warn('onChatListFetch error', data.error.message);\n    return;\n  }\n\n  if (data.refresh) {\n    const messagesMap = new Map(data.chats.map((e) => [e['id'], e]));\n    setChats(messagesMap);\n    setHasNext(data.hasNext);\n    setPullToRefresh(false);\n  } else {\n    setChats((oldChats) => {\n      const chatsMap = new Map(data.chats.map((e) => [e['id'], e]));\n      return new Map([...Array.from(oldChats), ...Array.from(chatsMap)]);\n    });\n    setHasNext(data.hasNext);\n  }\n  setPullToRefresh(false);\n};\n`)),mdx(\"h3\",null,\"3). onChatListUpdate\"),mdx(\"pre\",null,mdx(\"code\",o({parentName:\"pre\"},{className:\"language-typescript\"}),`const onChatListUpdate = (data: ChattyTypes.ChatListUpdateResponseType) => {\n  if (data.error) {\n    console.warn('onChatListRefresh error', data.error.message);\n    return;\n  }\n\n  setChats((oldChats) => {\n    const chatMap = new Map([[data['id'], data]]);\n    return new Map([...Array.from(oldChats), ...Array.from(chatMap)]);\n  });\n};\n`)),mdx(\"h2\",null,\"Need help?\"),mdx(\"p\",null,\"Get help from \",mdx(\"a\",o({parentName:\"p\"},{href:\"https://www.chatty-cloud.com/support\"}),\"ChattyCloud's support team\"),\", or join our \",mdx(\"a\",o({parentName:\"p\"},{href:\"https://github.com/chatty-cloud/beta/discussions\"}),\"GitHub discussion board\"),\" to see how others are using ChattyCloud.\"),mdx(NextBlock,{steps:[{text:\"Push Notifications\",link:\"/getting-started/push-notifications\"}],mdxType:\"NextBlock\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}},"fields":{"slug":"getting-started/listing-chats","lastUpdatedOn":"2022-08-12T15:52:10.249Z"}},"__N_SSG":true}