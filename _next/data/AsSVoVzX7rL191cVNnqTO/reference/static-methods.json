{"pageProps":{"frontmatter":{},"headings":[{"depth":2,"value":"init()"},{"depth":2,"value":"exit()"},{"depth":2,"value":"generateDistinctKey()"},{"depth":2,"value":"createChat()"},{"depth":2,"value":"updateChat()"},{"depth":2,"value":"createAdminMessage()"},{"depth":2,"value":"getMissedCount()"},{"depth":2,"value":"getMembersByGroup()"}],"body":{"compiledSource":"var h=Object.defineProperty,m=Object.defineProperties;var l=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var p=(e,t,a)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,n=(e,t)=>{for(var a in t||(t={}))r.call(t,a)&&p(e,a,t[a]);if(s)for(var a of s(t))o.call(t,a)&&p(e,a,t[a]);return e},c=(e,t)=>m(e,l(t));var d=(e,t)=>{var a={};for(var i in e)r.call(e,i)&&t.indexOf(i)<0&&(a[i]=e[i]);if(e!=null&&s)for(var i of s(e))t.indexOf(i)<0&&o.call(e,i)&&(a[i]=e[i]);return a};const makeShortcode=e=>function(a){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",n({},a))},InfoBlock=makeShortcode(\"InfoBlock\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var i=a,{components:e}=i,t=d(i,[\"components\"]);return mdx(MDXLayout,c(n(n({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h1\",null,\"Static Methods\"),mdx(\"p\",null,\"Chatty class static methods. These are async and non-socket methods\"),mdx(\"h2\",null,\"init()\"),mdx(\"p\",null,\"static method init is for initialize chatty client. it will initialize apiKey and chat member\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-typescript\"}),`interface IInitializePayloads {\n  apiKey: string;\n  member: {\n    id: string\n    name: string\n    language: string\n    country: string\n    avatar: string\n    deviceToken: string\n    device: DeviceType | null\n    group: string\n    permission: MemberPermissionType\n    data: any | null\n  };\n}\n\nawait Chatty.init({\n  apiKey: string,\n  member: {\n    id: string,\n    name: string\n  }\n});\n`)),mdx(\"h2\",null,\"exit()\"),mdx(\"p\",null,`static method exit is for terminate chatty client.\nwhen App user sign out, it will destroy apiKey and chat member`),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-typescript\"}),`await Chatty.exit();\n`)),mdx(\"h2\",null,\"generateDistinctKey()\"),mdx(\"p\",null,\"this distinctKey is used for making the chat unique\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-typescript\"}),`await Chatty.generateDistinctKey(['MemberId-1', 'MemberId-2']);\n\n`)),mdx(\"h2\",null,\"createChat()\"),mdx(\"p\",null,\"if distinctKey is already exist, then update and return existing chat\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-typescript\"}),`await Chatty.createChat();\n\n`)),mdx(\"h2\",null,\"updateChat()\"),mdx(\"p\",null,\"if distinctKey is already exist, then update and return existing chat\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-typescript\"}),`await Chatty.updateChat();\n\n`)),mdx(\"h2\",null,\"createAdminMessage()\"),mdx(\"p\",null,\"commonly used for user custom system message\"),mdx(\"p\",null,\"When recive system message at api server, send push notification to chat members\"),mdx(\"p\",null,\"When chat socket is connected and received notification, should call fetchMessages to update chat messages\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-typescript\"}),`await Chatty.createAdminMessage();\n\n`)),mdx(\"h2\",null,\"getMissedCount()\"),mdx(\"p\",null,\"commonly used for show badge count on chat button\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-typescript\"}),`await Chatty.getMissedCount();\n\n`)),mdx(\"h2\",null,\"getMembersByGroup()\"),mdx(\"p\",null,\"this is for getting members having same group\"),mdx(\"pre\",null,mdx(\"code\",n({parentName:\"pre\"},{className:\"language-typescript\"}),`await Chatty.getMembersByGroup();\n\n`)),mdx(InfoBlock,{type:\"note\",mdxType:\"InfoBlock\"},mdx(\"inlineCode\",null,\"pscale\"),\" can use the MySQL command-line client to quickly open an interactive shell for a database branch. Optional instructions for installing the MySQL client can be found for each platform below.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"fields":{"slug":"reference/static-methods","lastUpdatedOn":"2022-08-17T22:33:28+09:00"}},"__N_SSG":true}