{"pageProps":{"frontmatter":{"title":"Push Notifications and Missed count badge"},"headings":[{"depth":2,"value":"1. Register firebase credentials"},{"depth":2,"value":"2. Receiving remote message"},{"depth":2,"value":"3. How to show missed count badge"}],"body":{"compiledSource":"var m=Object.defineProperty,u=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var c=(e,t,o)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,s=(e,t)=>{for(var o in t||(t={}))i.call(t,o)&&c(e,o,t[o]);if(n)for(var o of n(t))r.call(t,o)&&c(e,o,t[o]);return e},d=(e,t)=>u(e,g(t));var p=(e,t)=>{var o={};for(var a in e)i.call(e,a)&&t.indexOf(a)<0&&(o[a]=e[a]);if(e!=null&&n)for(var a of n(e))t.indexOf(a)<0&&r.call(e,a)&&(o[a]=e[a]);return o};const makeShortcode=e=>function(o){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",s({},o))},InfoBlock=makeShortcode(\"InfoBlock\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var a=o,{components:e}=a,t=p(a,[\"components\"]);return mdx(MDXLayout,d(s(s({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"1. Register firebase credentials\"),mdx(\"p\",null,\"ChattyCloud need to register your firebase credential to send fcm messages to your chat members at dashboard\"),mdx(\"p\",null,\"That's it. now you can receive push notifications \"),mdx(\"p\",null,mdx(\"img\",s({parentName:\"p\"},{src:\"/img/docs/dashboard-fcm-credentials.png\",alt:\"dashboard-firebase-credentials\"}))),mdx(InfoBlock,{type:\"warning\",mdxType:\"InfoBlock\"},\"If remote message does not received, Check 'deviceToken' of the member is registered or not. It can be confirmed at your Chatty.init() method\"),mdx(\"h2\",null,\"2. Receiving remote message\"),mdx(\"pre\",null,mdx(\"code\",s({parentName:\"pre\"},{className:\"language-typescript\"}),`\nRemoteMessageType = {\n  title: string,\n  body: string,\n  data: {\n    type: 'CHATTY_NEW_MESSAGE',\n    ChatId: 'ChatId',\n    missedCount: {\n      total: number,\n      group: Array<{name: string, count: number}>\n    },\n  }\n}\n\nReact.useEffect(() => {\n  const unsubscribe = messaging().onMessage((message: FirebaseMessagingTypes.RemoteMessage) => {\n    console.debug('Receiving Notification Message:', message);\n\n    const activeScreen = navigation.getCurrentRoute().name;\n    if (activeScreen !== 'Chat') {\n      if (message.notification) {\n        displayNotification({\n          title: message.notification.title,\n          body: message.notification.body,\n          data: message.data,\n        });\n      }\n    }\n\n    dispatch(setChat({ missedCount: JSON.parse(message.data.missedCount) }));\n    \n  });\n});\n`)),mdx(\"h2\",null,\"3. How to show missed count badge\"),mdx(\"p\",null,\"Below code is a part of ChatButton.tsx\"),mdx(\"pre\",null,mdx(\"code\",s({parentName:\"pre\"},{className:\"language-typescript\"}),`ChatButton.tsx\n\nimport * as React from 'react';\nimport { View, AppState } from 'react-native';\nimport Chatty from 'chatty-client';\n\n\nconst ChatButton = (props: ChatButtonProps) => {\n  const chat = useChat(); // get from global state (in this example, Reducer is used)\n  \n  const handleAppState = async (newState: string) => {\n    if (newState === 'active') {\n      const missedCount = Chatty.getMissedCount();\n      store.dispatch(setChat({ missedCount: missedCount }));\n    }\n  }\n\n  // call one more time when appstate is foreground from background\n  React.useEffect(() => {\n    const subscription = AppState.addEventListener('change', handleAppState);\n\n    return () => {\n      subscription.remove();\n    };\n  }, []);\n\n  const handlePress = () => {\n    navigation.navigate('ChatList');\n  }\n\n  return (\n    <View>\n      /* Button UI components*/\n    </View>\n  )\n}\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}},"fields":{"slug":"getting-started/push-notifications","lastUpdatedOn":"2022-08-14T14:13:21.919Z"}},"__N_SSG":true}